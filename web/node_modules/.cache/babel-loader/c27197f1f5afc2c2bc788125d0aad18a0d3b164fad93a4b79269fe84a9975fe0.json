{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabriel\\\\Documents\\\\chatgpt-clone\\\\web\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './styles/App.css';\nimport './styles/reset.css';\nimport { makeRequest } from './api/api';\nimport SideMenu from './components/SideMenu/SideMenu.js';\nimport { ChatMessage } from './components/ChatMessage/ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chatlog, setChatlog] = useState([{\n    user: \"gpt\",\n    message: \"Coloque as características do seu heroi que adivinharei de qual esta se referindo. Exemplo de uso: arco e flecha, cabelo castanho, avengers\"\n  }]);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let response = await makeRequest({\n      prompt: input\n    });\n    response = response.data.split('\\n').map(line => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 18\n    }, this));\n    setChatlog([...chatlog, {\n      user: 'me',\n      message: `${input}`\n    }, {\n      user: 'gpt',\n      message: response\n    }]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatlog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            className: \"chat-input-textarea\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0G1GhaZQ+gIse1NPhX8D/qaqdAA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","makeRequest","SideMenu","ChatMessage","jsxDEV","_jsxDEV","App","_s","input","setInput","chatlog","setChatlog","user","message","handleSubmit","e","preventDefault","response","prompt","data","split","map","line","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","onSubmit","rows","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/gabriel/Documents/chatgpt-clone/web/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './styles/App.css';\nimport './styles/reset.css';\n\nimport { makeRequest } from './api/api';\nimport SideMenu from './components/SideMenu/SideMenu.js';\nimport { ChatMessage } from './components/ChatMessage/ChatMessage';\n\n\nfunction App() {\n\n  const[input, setInput] = useState(\"\")\n  const[chatlog, setChatlog] = useState([{\n    user:\"gpt\",\n    message:\"Coloque as características do seu heroi que adivinharei de qual esta se referindo. Exemplo de uso: arco e flecha, cabelo castanho, avengers\"\n  }]);\n\n  async function handleSubmit(e){\n    e.preventDefault()\n    let response = await makeRequest({prompt: input})\n    response = response.data.split('\\n')\n    .map(line => <p>{line}</p>)\n\n    setChatlog([... chatlog, {\n      user:'me',\n      message: `${input}`\n    },\n    {\n      user:'gpt',\n      message: response\n    }\n    ])\n  }\n\n  return (\n    <div className=\"App\">\n      <SideMenu></SideMenu>\n      <section className='chatbox'>\n        <div className='chat-log'>\n          {chatlog.map((message, index)=>(\n            <ChatMessage\n            key={index}\n            message={message}\n            />\n          ))}\n        </div>\n        <div className='chat-input-holder'>\n            <form onSubmit={handleSubmit}>\n              <input\n                rows='1'\n                className='chat-input-textarea'\n                value={input}\n                onChange={e =>setInput(e.target.value)}>\n              </input>\n            </form>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}